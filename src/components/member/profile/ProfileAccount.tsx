import { useEffect, useState } from "react";
import { Card, Col, Form, Input, Row, Button, message, Select } from "antd";
import { UserOutlined, MailOutlined, PhoneOutlined } from "@ant-design/icons";
import useUser from "../../../hooks/User/useUser";
import useUserService from "../../../hooks/User/useUserService";
import dayjs from "dayjs";

const { Option } = Select;

export default function ProfileAccount() {
  const { userData, setUserData } = useUser();
  const { updateUser, getUserById } = useUserService(); // üëà nh·ªõ th√™m h√†m fetch
  const [form] = Form.useForm();
  const [donationCount, setDonationCount] = useState<number>(0);

  useEffect(() => {
    if (userData?.data) {
      const location = userData.data.location_id || {};
      const dobValue = userData.data.dob
        ? dayjs(userData.data.dob).format("YYYY-MM-DD")
        : "";

      form.setFieldsValue({
        fullname: userData.data.fullname,
        email: userData.data.email,
        phone: userData.data.phone,
        dob: dobValue,
        gender: userData.data.gender,
        house_number: location.house_number,
        road: location.road,
        ward: location.ward,
        district: location.district,
        city: location.city,
        role_name: userData.data.role_id?.[0]?.role_name || "MEMBER",
      });

      setDonationCount(5);
    }
  }, [userData, form]);

  const onFinish = async (values: any) => {
    const payload = {
      email: values.email,
      fullname: values.fullname,
      phone: values.phone,
      dob: values.dob,
      gender: values.gender,
      role_name:
        values.role_name || userData?.data.role_id?.[0]?.role_name || "MEMBER",
    };

    console.log("üöÄ Payload g·ª≠i l√™n:", payload);

    try {
      await updateUser(userData?.data.user_id, payload);
      message.success("‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng!");

      // ‚è¨ Fetch l·∫°i user m·ªõi nh·∫•t
      const updatedUser = await getUserById(userData?.data.user_id);
      setUserData(updatedUser);
    } catch (error: any) {
      console.error("‚ùå L·ªói c·∫≠p nh·∫≠t:", error);
      const errMessage =
        error?.response?.data?.message?.join?.(", ") ||
        error?.response?.data?.message ||
        "C·∫≠p nh·∫≠t th·∫•t b·∫°i!";
      message.error(`‚ùå ${errMessage}`);
    }
  };

  return (
    <Row gutter={24}>
      {/* LEFT FORM */}
      <Col xs={24} md={24}>
        <Card title="Th√¥ng tin t√†i kho·∫£n" className="shadow-md">
          <Form form={form} layout="vertical" onFinish={onFinish}>
            <Row gutter={16}>
              <Col span={12}>
                <Form.Item label="H·ªç t√™n" name="fullname">
                  <Input prefix={<UserOutlined />} placeholder="H·ªç t√™n" />
                </Form.Item>
              </Col>
              <Col span={12}>
                <Form.Item label="S·ªë ƒëi·ªán tho·∫°i" name="phone">
                  <Input prefix={<PhoneOutlined />} placeholder="SƒêT" />
                </Form.Item>
              </Col>
            </Row>

            <Row gutter={16}>
              <Col span={12}>
                <Form.Item label="Email" name="email">
                  <Input prefix={<MailOutlined />} disabled />
                </Form.Item>
              </Col>
              <Col span={12}>
                <Form.Item label="Ng√†y sinh" name="dob">
                  <Input type="date" />
                </Form.Item>
              </Col>
            </Row>

            <Row gutter={16}>
              <Col span={12}>
                <Form.Item
                  label="Gi·ªõi t√≠nh"
                  name="gender"
                  rules={[{ required: true }]}
                >
                  <Select placeholder="Ch·ªçn gi·ªõi t√≠nh">
                    <Option value="Male">Nam</Option>
                    <Option value="Female">N·ªØ</Option>
                  </Select>
                </Form.Item>
              </Col>
              <Col span={12}>
                <Form.Item label="S·ªë nh√†" name="house_number">
                  <Input placeholder="VD: 86" disabled />
                </Form.Item>
              </Col>
            </Row>

            <Row gutter={16}>
              <Col span={12}>
                <Form.Item label="ƒê∆∞·ªùng" name="road">
                  <Input placeholder="VD: Nguy·ªÖn Hu·ªá" disabled />
                </Form.Item>
              </Col>
              <Col span={12}>
                <Form.Item label="Ph∆∞·ªùng / X√£" name="ward">
                  <Input disabled />
                </Form.Item>
              </Col>
            </Row>

            <Row gutter={16}>
              <Col span={12}>
                <Form.Item label="Qu·∫≠n / Huy·ªán" name="district">
                  <Input disabled />
                </Form.Item>
              </Col>
              <Col span={12}>
                <Form.Item label="Th√†nh ph·ªë / T·ªânh" name="city">
                  <Input disabled />
                </Form.Item>
              </Col>
            </Row>

            <Form.Item name="role_name" hidden>
              <Input type="hidden" />
            </Form.Item>

            <Form.Item>
              <Button type="primary" htmlType="submit">
                C·∫≠p nh·∫≠t th√¥ng tin
              </Button>
            </Form.Item>
          </Form>
        </Card>
      </Col>

      {/* RIGHT AVATAR */}
    </Row>
  );
}
