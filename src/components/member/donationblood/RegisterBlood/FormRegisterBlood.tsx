import {
  IconUser,
  IconCalendar,
  IconPhone,
  IconMapPin,
  IconDroplet,
  IconUserHeart,
  IconGenderMale,
  IconGenderFemale,
  IconMail,
  IconNumbers,
  IconBuildingHospital,
  IconListDetails,
} from "@tabler/icons-react";
import { Input, notification, Select } from "antd";
import { Option } from "antd/es/mentions";
import { motion } from "framer-motion";

export default function FormRegisterBlood({
  formData,
  setFormData,
  setWaitingList,
}) {
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log("üìã Form Submitted:", formData);
    if (
      !formData.fullName ||
      !formData.dob ||
      !formData.phone ||
      !formData.roleDonation ||
      !formData.bloodType ||
      !formData.location
    ) {
      notification.error({
        message: "L·ªói ƒêƒÉng K√Ω",
        description: "Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin.",
      });
      return;
    }

    setWaitingList((prevList) => [
      ...prevList,
      { ...formData, status: "ƒêang ch·ªù x√°c nh·∫≠n" },
    ]);

    setFormData({
      fullName: formData.fullName,
      dob: formData.dob,
      phone: formData.phone,
      roleDonation: formData.roleDonation,
      bloodType: formData.bloodType,
      location: formData.location,
      statusHealth: {
        height: "",
        weight: "",
        bloodPressure: "",
        medicalHistory: "",
        currentCondition: "",
        medication: "",
        lastDonationDate: "",
        cccd: "",
        imgHealth: "",
      },
      status: "",
      hospital: "",
    });
  };
  const handleSelectChange = (value, fieldName) => {
    setFormData((prev) => ({
      ...prev,
      [fieldName]: value,
    }));
  };
  const inputStyle =
    "w-full px-3 py-2 border rounded pl-10 bg-white text-gray-800";
  const inputWrapper = "relative mb-4";
  const iconMotion = {
    initial: { opacity: 0, y: -4 },
    animate: { opacity: 1, y: 0 },
    transition: { duration: 0.3 },
  };
  const iconClass = "absolute top-2.5 left-3 text-red-400 w-4 h-4";
  return (
    <div className="bg-white rounded-xl shadow-lg p-6 text-sm">
      <h2 className="text-lg font-bold mb-4 text-red-600 flex items-center justify-center gap-2">
        ƒêƒÉng K√Ω Nh√≥m M√°u
      </h2>
      <form onSubmit={handleSubmit}>
        {/* H·ªç v√† t√™n */}
        <div className={inputWrapper}>
          <label className="block font-semibold mb-1">H·ªç v√† t√™n</label>
          <div className="relative">
            <motion.div {...iconMotion}>
              <IconUser className={iconClass} />
            </motion.div>
            <Input
              type="text"
              name="fullName"
              value={formData.fullName}
              onChange={handleChange}
              className={inputStyle}
              placeholder="Nh·∫≠p h·ªç v√† t√™n"
            />
          </div>
        </div>

        {/* Ng√†y sinh v√† Gi·ªõi t√≠nh */}
        <div className="flex gap-4">
          <div className={inputWrapper + " w-1/2"}>
            <label className="block font-semibold mb-1">Ng√†y sinh</label>
            <div className="relative">
              <motion.div {...iconMotion}>
                <IconCalendar className={iconClass} />
              </motion.div>
              <Input
                type="date"
                name="dob"
                value={formData.dob}
                onChange={handleChange}
                className={inputStyle}
              />
            </div>
          </div>

          <div className={inputWrapper + " w-1/2"}>
            <label className="block font-semibold mb-1">Gi·ªõi t√≠nh</label>

            <Select
              value={formData.gender}
              onChange={(value) => handleSelectChange(value, "gender")}
              className="w-full text-sm pl-10"
              styles={{ popup: { root: { fontSize: "12px" } } }}
              placeholder="L·ª±a ch·ªçn"
            >
              <Option value="male">
                <IconGenderMale className="inline mr-1 text-red-400 w-4 h-4" />
                Nam
              </Option>
              <Option value="female">
                <IconGenderFemale className="inline mr-1 text-red-400 w-4 h-4" />
                N·ªØ
              </Option>
            </Select>
          </div>
        </div>
        <div className="mb-4 flex gap-4">
          {/* S·ªë ƒëi·ªán tho·∫°i */}
          <div className="w-1/2">
            <label className="block font-semibold mb-1">S·ªë ƒëi·ªán tho·∫°i</label>
            <div className="relative">
              <motion.div {...iconMotion}>
                <IconPhone className={iconClass} />
              </motion.div>
              <Input
                type="tel"
                name="phone"
                value={formData.phone}
                onChange={handleChange}
                className={inputStyle}
                placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i li·ªán h·ªá"
              />
            </div>
          </div>

          {/* Email */}
          <div className="w-1/2">
            <label className="block font-semibold mb-1">Email</label>
            <div className="relative">
              <motion.div {...iconMotion}>
                <IconMail className={iconClass} />
              </motion.div>
              <Input
                type="email"
                name="email"
                value={formData.email}
                onChange={handleChange}
                className={inputStyle}
                placeholder="Nh·∫≠p email li√™n h·ªá"
              />
            </div>
          </div>
        </div>

        {/* Vai tr√≤ & th·ªùi gian c·∫ßn m√°u */}
        <div className="mb-4 flex gap-4">
          <div className="w-1/2 relative">
            <label className="block font-semibold mb-1">Vai tr√≤</label>
            <Select
              value={formData.roleDonation}
              onChange={(value) => handleSelectChange(value, "roleDonation")}
              className="w-full text-sm pl-10"
              placeholder="L·ª±a ch·ªçn"
              suffixIcon={<IconUserHeart className="text-red-400 w-4 h-4 " />}
            >
              <Option value="">Ch·ªçn Vai Tr√≤</Option>

              <Option value="Ng∆∞·ªùi Hi·∫øn M√°u">
                <span className="flex items-center gap-1">
                  <IconUserHeart className="text-red-400 w-4 h-4 " />
                  Ng∆∞·ªùi Hi·∫øn M√°u
                </span>
              </Option>
              <Option value="Ng∆∞·ªùi C·∫ßn M√°u">
                <span className="flex items-center gap-1">
                  <IconUserHeart className="text-red-400 w-4 h-4 " />
                  Ng∆∞·ªùi C·∫ßn C·∫ßn M√°u
                </span>
              </Option>
            </Select>
          </div>

          <div className="w-1/2 relative">
            <label className="block font-semibold mb-1">
              Th·ªùi gian th·ª±c hi·ªán
            </label>
            <motion.div {...iconMotion}></motion.div>
            <Input
              type="datetime-local"
              name="neededTime"
              value={formData.neededTime}
              onChange={handleChange}
              className={inputStyle}
              placeholder="Gi·ªù"
            />
          </div>
        </div>

        {/* Nh√≥m m√°u & s·ªë l∆∞·ª£ng */}
        <div className="mb-4 flex gap-4">
          <div className="w-3/8 relative">
            <label className="block font-semibold mb-1 ">Nh√≥m m√°u</label>
            <Select
              value={formData.bloodType}
              onChange={(value) => handleSelectChange(value, "bloodType")}
              className="w-full text-sm pl-10"
              placeholder="Ch·ªçn nh√≥m m√°u"
              suffixIcon={<IconDroplet className="text-red-400 w-4 h-4" />}
            >
              <Option value="">Ch·ªçn nh√≥m m√°u</Option>

              <Option value="A">
                <span className="flex items-center gap-1">
                  <IconDroplet className="text-red-400 w-4 h-4" />
                  M√°u (A)
                </span>
              </Option>
              <Option value="B">
                <span className="flex items-center gap-1">
                  <IconDroplet className="text-red-400 w-4 h-4" />
                  M√°u (B)
                </span>
              </Option>
              <Option value="AB">
                <span className="flex items-center gap-1">
                  <IconDroplet className="text-red-400 w-4 h-4" />
                  M√°u (AB)
                </span>
              </Option>
              <Option value="O">
                <span className="flex items-center gap-1">
                  <IconDroplet className="text-red-400 w-4 h-4" />
                  M√°u (O)
                </span>
              </Option>
            </Select>
          </div>
          <div className="w-3/8 relative">
            <label className="block font-semibold mb-1 ">Lo·∫°i Rh</label>
            <Select
              value={formData.rh}
              onChange={(value) => handleSelectChange(value, "bloodType")}
              className="w-full text-sm pl-10"
              placeholder="Ch·ªçn nh√≥m m√°u"
              suffixIcon={<IconDroplet className="text-red-400 w-4 h-4" />}
            >
              <Option value="">Ch·ªçn Rh</Option>

              <Option value="Rh+">
                <span className="flex items-center gap-1">
                  <IconDroplet className="text-red-400 w-4 h-4" />
                  RH (+)
                </span>
              </Option>
              <Option value="Rh-">
                <span className="flex items-center gap-1">
                  <IconDroplet className="text-red-400 w-4 h-4" />
                  RH (-)
                </span>
              </Option>
            </Select>
          </div>
          <div className="w-2/8 relative">
            <label className="block font-semibold mb-1">S·ªë l∆∞·ª£ng (ml)</label>

            <Input
              type="number"
              name="quantity"
              value={formData.quantity}
              onChange={handleChange}
              className={inputStyle}
              placeholder="ml"
              min="150"
              suffix={<IconNumbers className="text-red-400 w-4 h-4" />}
            />
          </div>
        </div>

        {/* ƒê·ªãa ƒëi·ªÉm hi·∫øn m√°u */}
        <div className={inputWrapper}>
          <label className="block font-semibold mb-1">ƒê·ªãa ƒëi·ªÉm</label>
          <div className="relative">
            <motion.div {...iconMotion}>
              <IconMapPin className={iconClass} />
            </motion.div>
            <input
              type="text"
              name="location"
              value={formData.location}
              onChange={handleChange}
              className={inputStyle}
              placeholder="Nh·∫≠p ƒë·ªãa ƒëi·ªÉm"
            />
          </div>
        </div>

        {/* B·ªánh vi·ªán */}
        <div className="flex gap-4">
          {/* B·ªánh vi·ªán */}
          <div className="w-5/8">
            <label className="block font-semibold mb-1">B·ªánh vi·ªán</label>
            <div className="relative">
              <motion.div {...iconMotion}>
                <IconBuildingHospital className={iconClass} />
              </motion.div>
              <Input
                type="text"
                name="hospital"
                value={formData.hospital}
                onChange={handleChange}
                className={inputStyle}
                placeholder="T√™n b·ªánh vi·ªán"
              />
            </div>
          </div>

          {/* Khoa */}
          <div className="w-3/8">
            <label className="block font-semibold mb-1">
              M·ª©c ƒë·ªô th·ª±c hi·ªán{" "}
            </label>
            <div className="relative">
              <motion.div {...iconMotion}>
                <IconListDetails className={iconClass} />
              </motion.div>
              <Select
                value={formData.department}
                onChange={(value) => handleSelectChange(value, "department")}
                className="w-full"
                placeholder="Ch·ªçn m·ª©c ƒë·ªô"
              >
                <Option value="1">G·∫•p</Option>
                <Option value="2">Th√¥ng th∆∞·ªùng</Option>
                <Option value="3">D·ª± ph√≤ng</Option>
              </Select>
            </div>
          </div>
        </div>

        {/* Submit */}
        <button
          type="submit"
          className="bg-red-600 text-white px-6 py-2 rounded hover:bg-red-700 transition-all mt-4 text-sm"
        >
          G·ª≠i ƒëƒÉng k√Ω
        </button>
      </form>
    </div>
  );
}
